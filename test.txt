TESTS MINISHELL

echo > | <  OK

echo bonjour | OK

echo bonjour |               OK

echo bonjour |       | cat infile OK

wc -l > outfile OK

echo < hello OK

echo hello world | wc -l > outfile OK

echo hello world < | wc -l > outfile OK

echo hello world < infile | wc -l > outfile OK

echo hello world < | wc -l > outfile | cat << hello OK

echo hello     world < |   wc -l > outfile      |  cat << hello OK

echo hello     world < |   wc -l > outfile      |  cat << hello     | OK

echo hello world << outfile | wc -l > outfile | cat < | grep >> 123456 << 123 > 1234 | hello world OK

echo hello world >>dgh>fhhh|cat >echo OK

echo hello world >>dgh<""fhhh|cat >echo OK

echo hello world >>dgh<"hello world" fhhh|cat >echo OK

echo hello world >>dgh<"hello world"fhhh|cat >echo OK

hello  " > hello world " hello > world OK

hello " >> coucou << ca va " | cat " < gfgf > ergs " OK

hello ' >> coucou << ca va ' | cat ' < gfgf > ergs ' OK

hello > " > hello world "" hello > world OK

hello > ' > hello world '' hello > world OK

echo hello >"out"file OK

echo >>		hello		"fefe"abc"ok"abc <	 here "test" < b 123"ddds" yuio

echo < abc"hello world" OK

echo > abc" 'a'ab"ab << ab""''ab c			<		'a'			>> ' 'ab""

echo > bla bla > hello world < dggdgd << doc rgasgsdfs > afgfgsd >> app > ga << heredoc << here >> hello >> salut | cd dfhdfgds | grep >> azerty

cat infile_1 | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat | cat

echo "'''"""'''""hel"'o""


message = ""
message = test.
buffer = test.
message = test .
buffer = NULL

env -i
OLDPWD


CORRECTION :

1) SIMPLE COMMAND & GLOBAL

OK

2) ARGUMENTS & HISTORY

OK

3) EXIT :

OK

4) RETURN VALUE OF A PROCESS :

echo $? doit etre remis en place

5) SIGNALS :

ctrl-\ after you wrote some stuff should quit minishell
ctrl-\ after a blocking command (fonctionne, mais l'affichage n'est pas comme bash)
ctrl-D after a blocking command (ne fonctionne pas)

6) DOUBLE QUOTES :

OK

7) SIMPLE QUOTES :

OK

8) ENV :

OK

9) EXPORT :

OK

10) UNSET :

OK

11) CD :

OK

12) PWD :

OK

13) RELATIVE PATH :

OK

14) ENVIRONMENT PATH :

OK

15)REDIRECTION

OK

16) PIPES

OK

-------------------------------------------------------------------------------
CHOSES A CHECKER :

1) ft_calloc_strs dans minisplit a re-checker :
		if (ft_strchr("\"\'", s[i]) && quotes == 0)
				quotes = 1;
		else if ????

2) checker skip_space et voir pour la mettre dans les utils

3) Tous les endroits o√π on doit modifier la variable globale status :
ATTENTION ! NE PAS MODIFIER LA VARIABLE GLOBALE DANS ERR_RETURN MAIS REMONTER DANS LE CODE POUR REFLECHIR OU LE FAIRE
